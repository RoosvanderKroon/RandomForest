
library (raster)
library (ggplot2)
library (caret)
library (randomForest)
# set working directory 

# assign rasterfile with brick function 
aoi <- brick("aoi.tif")
# assign shapefile data
datapolygons <- shapefile("polygonslandcover.shp")

# plot the map with the shapefile of polygons
plotRGB(aoi, r = 1, g = 2, b = 3, stretch = "lin")
plot(datapolygons, col= "red", add= TRUE)

# rename spectral bands 
names(aoi)<- c("red","green", "blue")
names(aoi)

# transform into factor and see classifications
levels(as.factor(datapolygons$class))
#extract data and turn into dataframe
rasterdata <- extract(aoi, datapolygons, df = TRUE) 

# create extra column landcover class corresponding to column "ID", i.e. the polygons classifications
rasterdata$landcover <- as.factor( datapolygons$class[match(rasterdata$ID, seq(nrow(datapolygons)))])
# Remove the ID column, not needed anymore
rasterdata<- rasterdata[-1]

# see how many rows for each landcover type
summary(rasterdata$landcover)

# subsetting the data ###### 
subset<- rasterdata[unlist(tapply(1:nrow(rasterdata),rasterdata$landcover,function(x) sample(x,15000))),]
# so of each landcover class 15000 rows were used, total rows 75000

# splitting data in train and test
subset$landcover <- as.factor(subset$landcover)

set.seed(123)
ind<- sample(2, nrow(subset), replace=TRUE, prob = c(0.7,0.3))
train<- subset[ind==1,]
test<- subset[ind==2,]
rfm <- randomForest(landcover~., data=train)
print(rfm)

p1<- predict(rfm, test)
confusionMatrix(p1, test$landcover)


####### Running the model and plotting result ###########

result <- predict(aoi,rfm,filename = "classification.tif",overwrite = TRUE)
plot(result, axes = FALSE, box = FALSE, col = c("brown", # agri "light green"# field,"dark green" # forest, "gray" #anthropogenic, "blue" # water))



                
